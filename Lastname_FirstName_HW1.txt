
Ruby intro part 1
  #sum
[32m    should be defined[0m
[32m    returns correct sum [20 points][0m
[32m    works on the empty array [10 points][0m
  #max_2_sum
[32m    should be defined[0m
[32m    returns the correct sum [7 points][0m
[32m    works even if 2 largest values are the same [3 points][0m
[32m    returns zero if array is empty [10 points][0m
[32m    returns value of the element if just one element [10 points][0m
  #sum_to_n
[32m    should be defined[0m
[32m    returns true when any two elements sum to the second argument [30 points][0m
[32m    returns false for any single element array [5 points][0m
[32m    returns false for an empty array [5 points][0m

Ruby intro part 2
  #hello
[32m    should be defined[0m
[32m    The hello method returns the correct string [30 points][0m
  #starts_with_consonant?
[32m    should be defined[0m
[32m    classifies true cases [10 points][0m
[32m    classifies false cases [10 points][0m
[31m    works on the empty string [5 points] (FAILED - 1)[0m
[31m    works on nonletters [5 points] (FAILED - 2)[0m
  #binary_multiple_of_4?
[32m    should be defined[0m
[32m    classifies valid binary numbers [30 points][0m
[32m    rejects invalid binary numbers [10 points][0m

Ruby intro part 3
  BookInStock
[32m    should be defined[0m
    getters and setters
[32m      should set ISBN [10 points][0m
[32m      should set price [10 points][0m
[32m      should be able to change ISBN [10 points][0m
[32m      should be able to change price [10 points][0m
    constructor
[32m      should reject invalid ISBN number [10 points][0m
[32m      should reject zero price [10 points][0m
[32m      should reject negative price [10 points][0m
    #price_as_string
[32m      should be defined[0m
[32m      should display 33.95 as "$33.95" [10 points][0m
[32m      should display 1.1 as $1.10 [10 points][0m
[32m      should display 20 as $20.00 [10 points][0m

Failures:

  1) Ruby intro part 2 #starts_with_consonant? works on the empty string [5 points]
     [31mFailure/Error: if vowel.include? string[0][0m
     [31m[0m
     [31mTypeError:[0m
     [31m  no implicit conversion of nil into String[0m
     [36m# ./lib/ruby_intro.rb:67:in `include?'[0m
     [36m# ./lib/ruby_intro.rb:67:in `starts_with_consonant?'[0m
     [36m# ./spec/part2_spec.rb:38:in `block (3 levels) in <top (required)>'[0m

  2) Ruby intro part 2 #starts_with_consonant? works on nonletters [5 points]
     [31mFailure/Error: expect(starts_with_consonant?('#foo')).to be_falsy[0m
     [31m[0m
     [31m  expected: falsey value[0m
     [31m       got: true[0m
     [36m# ./spec/part2_spec.rb:41:in `block (3 levels) in <top (required)>'[0m

Finished in 0.06121 seconds (files took 0.09907 seconds to load)
[31m34 examples, 2 failures[0m

Failed examples:

[31mrspec ./spec/part2_spec.rb:37[0m [36m# Ruby intro part 2 #starts_with_consonant? works on the empty string [5 points][0m
[31mrspec ./spec/part2_spec.rb:40[0m [36m# Ruby intro part 2 #starts_with_consonant? works on nonletters [5 points][0m

